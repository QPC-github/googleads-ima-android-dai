#!/bin/bash

# DESCRIPTION
#
# Script to update the files on github for the Android IMA SDK DAI samples
#
# USAGE
#
# Make sure to update the number in the VERSION file each time you do a release
#
# Just run the script:
#
#   ./java/com/google/ads/interactivemedia/v3/samples/dai/make_release
#
# It will create a zipped up release for ima sdk.
#
# To test changes before pushing to GitHub run:
#
#   ./java/com/google/ads/interactivemedia/v3/samples/dai/make_release --test_mode
#
# In the rare case you want to pass additional args to copybara, you can use the following:
#
# ./make_release --copybara_args='--init-history' or ./make_release -a='--init-history'
#
# The above example will append the '--init-history' argument when it runs copybara.
#
# NOTES
#
# If you don't run prodaccess, this thing will throw all kinds of weird piper
# errors.
#

set -e

GITHUB_OWNER='googleads'
GITHUB_REPO='googleads-ima-android-dai'

# Figure out where we are, get google3 location
GOOGLE3=$(pwd)
if [ "$(basename $(pwd))" != "google3" ]; then
  GOOGLE3=`pwd | grep -o ".*/google3/" | grep -o ".*google3"`
fi
if [ -z ${GOOGLE3} ]; then
  echo "Error - no google3 in current working directory"
  exit 1
fi

# Parse command line options
TEST_MODE=false
for i in "$@" ; do
  case $i in
    --test_mode|-t)
      TEST_MODE=true
      ;;
    --copybara_args=*|-a=*)
      # get the argument value - see http://tldp.org/LDP/abs/html/string-manipulation.html (search substring removal)
      COPYBARA_ARGS="${i#*=}"
      echo "copybara args: ${COPYBARA_ARGS}"
      ;;
    *)
      echo "Unknown option $i"
      exit 1
      ;;
  esac
done

VERSION=`cat ${GOOGLE3}/java/com/google/ads/interactivemedia/v3/samples/dai/VERSION`
COPYBARA="/google/data/ro/teams/copybara/copybara"
CONFIG_PATH="${GOOGLE3}/java/com/google/ads/interactivemedia/v3/samples/dai/copy.bara.sky"
TEMP_DIR="/tmp/copybara_test_android_ima_dai"
COMMIT_MSG="Commiting latest changes for v${VERSION}"

# Create Copybara change and commit to github (does not commit in test mode)
do_git_push() {
  rm -rf ${TEMP_DIR}

  if [ $TEST_MODE = true ] ; then
    echo "Creating copybara test change for version ${VERSION}..."
    copybara_cmd="${COPYBARA} ${CONFIG_PATH} postsubmit_piper_to_github -v ${COPYBARA_ARGS} --git-destination-path ${TEMP_DIR} --dry-run --force --squash"
  fi

  if [ $TEST_MODE = false ] ; then
    echo "Creating Copybara change for version ${VERSION}..."
    copybara_cmd="${COPYBARA} ${CONFIG_PATH} postsubmit_piper_to_github -v ${COPYBARA_ARGS} --git-destination-path ${TEMP_DIR}"
  fi

  # Run this following copybara command to see copybara logs
  echo "Running copybara command: ${copybara_cmd}"

  copybara_output=$($copybara_cmd 2>&1)
  echo "googleads copybara complete, output dir: ${TEMP_DIR}"
  if [[ -z "${TEMP_DIR}" ]]; then
    echo "${copybara_output}"
    echo "Error - copybara failed."
    exit 1
  fi
}

do_release_upload() {
  pushd ${TEMP_DIR}
  # Zip up samples and push to github as a release
  # SampleVideoPlayer release
  cp README.md SampleVideoPlayer/
  cp LICENSE SampleVideoPlayer/
  zip -r SampleVideoPlayer${VERSION}.zip SampleVideoPlayer/*

  # BasicExample release
  cp README.md BasicExample/
  cp LICENSE BasicExample/
  zip -r BasicExample${VERSION}.zip BasicExample/*

  # AdvancedExample releasee
  cp README.md AdvancedExample/
  cp LICENSE AdvancedExample/
  zip -r AdvancedExample${VERSION}.zip AdvancedExample/*

  RELEASE_NOTES="#### Google Ads IMA SDK Android Samples for DAI v${VERSION}

  Requires the [IMA Android SDK jar](https://developers.google.com/interactive-media-ads/docs/sdks/android/download)
  or adding the IMA Android SDK as a gradle dependency:
\`\`\`
compile 'com.google.ads.interactivemedia.v3:interactivemedia:X.Y.Z'
\`\`\`
  Replace \`X.Y.Z\` with the desired library version.
  All releases are designed for Android Studio.

|  Download | Description |
| ------ | -------------- |
| [SampleVideoPlayer](https://github.com/${GITHUB_OWNER}/${GITHUB_REPO}/releases/download/${VERSION}/SampleVideoPlayer${VERSION}.zip) | Simple video player app to use with the [IMA SDK quickstart guide](https://developers.google.com/interactive-media-ads/docs/sdks/android/v3/dai-quickstart).
| [BasicExample](https://github.com/${GITHUB_OWNER}/${GITHUB_REPO}/releases/download/${VERSION}/BasicExample${VERSION}.zip) | Basic integration of the IMA SDK into an Android app.
| [AdvancedExample](https://github.com/${GITHUB_OWNER}/${GITHUB_REPO}/releases/download/${VERSION}/AdvancedExample${VERSION}.zip) | Integration of the IMA SDK into an Android app demonstrating multiple videos and ad tag types. |"

  # Upload release to GitHub
  pushd ${GOOGLE3}
  echo "Executing the GitHub uploader..."
  blaze run //devrel/tools/github:github_uploader -- \
      -f "${TEMP_DIR}/SampleVideoPlayer${VERSION}.zip" \
      -u "${GITHUB_OWNER}" \
      -r "${GITHUB_REPO}" \
      -t "${VERSION}" \
      -n "Google Ads IMA SDK Android Examples for DAI v${VERSION}" \
      -b "${RELEASE_NOTES}" \
      -c "${COMMIT_MSG}"

  blaze run //devrel/tools/github:github_uploader -- \
      -f "${TEMP_DIR}/BasicExample${VERSION}.zip" \
      -u "${GITHUB_OWNER}" \
      -r "${GITHUB_REPO}" \
      -t "${VERSION}" \
      -a

  blaze run //devrel/tools/github:github_uploader -- \
      -f "${TEMP_DIR}/AdvancedExample${VERSION}.zip" \
      -u "${GITHUB_OWNER}" \
      -r "${GITHUB_REPO}" \
      -t "${VERSION}" \
      -a
}

do_git_push

if [ $TEST_MODE = false ] ; then
  do_release_upload
fi

